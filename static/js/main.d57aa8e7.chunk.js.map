{"version":3,"sources":["assets/styles/GlobalStyle.js","assets/styles/theme.js","assets/images/bg.jpg","helpers.js","views/Root.styles.js","components/Form/Form.styles.js","components/InputField/InputField.styles.js","components/InputField/InputField.js","components/SelectField/SelectField.styles.js","components/SelectField/SelectField.js","components/Button/Button.styles.js","components/Button/Button.js","components/Form/Form.js","views/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","images","heroBg","colors","lightGrey","white","red","whiteGlass","success","fontSize","l","m","required","values","checkNameLength","value","length","undefined","convertValues","converted","key","parsed","parseFloat","isNaN","Wrapper","styled","section","StyledForm","form","StyledSuccessSubmit","p","StyledErrorSubmit","div","StyledLabel","label","StyledInput","input","StyledError","span","InputField","type","step","min","max","meta","touched","error","StyledSelect","select","SelectField","children","StyledButton","button","disabled","Button","props","Form","handleSubmit","valid","dishTypeValue","successInfo","errorInfo","onSubmit","className","Field","name","component","validate","reduxForm","errors","no_of_slices","diameter","spiciness_scale","slices_of_bread","selector","formValueSelector","connect","state","OrderForm","useState","setSuccessInfo","setErrorInfo","a","fetch","method","headers","body","JSON","stringify","then","response","console","log","catch","reducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","rootReducer","combineReducers","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","Root","document","getElementById"],"mappings":"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","file":"static/js/main.d57aa8e7.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n        overflow-x: hidden;\r\n    }\r\n    *,*::after, *::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n\r\n    a, button {\r\n        font-family: 'Montserrat', sans-serif;\r\n    }\r\n`;\r\n","import bg from 'assets/images/bg.jpg';\r\n\r\nexport const theme = {\r\n  images: {\r\n    heroBg: bg,\r\n  },\r\n  colors: {\r\n    lightGrey: '#ebe8e8',\r\n    white: '#fff',\r\n    red: 'red',\r\n    whiteGlass: 'rgba(255, 255, 255, 0.1)',\r\n    success: '#00bd00',\r\n  },\r\n  fontSize: {\r\n    l: '15px',\r\n    m: '13px',\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bg.6957d644.jpg\";","export const required = (values) => {\r\n  if (!values || values === '') {\r\n    return 'Required';\r\n  }\r\n};\r\n\r\nexport const validate = (values) => {\r\n  const errors = {};\r\n  if (values.type === 'pizza') {\r\n    if (!values.no_of_slices) {\r\n      errors.no_of_slices = 'Required';\r\n    }\r\n    if (!values.diameter) {\r\n      errors.diameter = 'Required';\r\n    } else if (values.diameter < 32 || values.diameter > 50) {\r\n      errors.diameter = 'Diameter must be between 32 to 50';\r\n    }\r\n  }\r\n  if (values.type === 'soup') {\r\n    if (!values.spiciness_scale) {\r\n      errors.spiciness_scale = 'Required';\r\n    } else if (values.spiciness_scale < 1 || values.spiciness_scale > 10) {\r\n      errors.spiciness_scale = 'Spiciness must be between 1 to 10';\r\n    }\r\n  }\r\n  if (values.type === 'sandwich') {\r\n    if (!values.slices_of_bread) {\r\n      errors.slices_of_bread = 'Required';\r\n    }\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const checkNameLength = (value) => (value && value.length < 4 ? 'Must be 4 characters or more' : undefined);\r\n\r\nexport const convertValues = (values) => {\r\n  const converted = {};\r\n  for (const key in values) {\r\n    const parsed = parseFloat(values[key]);\r\n    converted[key] = isNaN(values[key]) ? values[key] : parsed;\r\n  }\r\n  return converted;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n  background: url(${({ theme }) => theme.images.heroBg}) center no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background: ${({ theme }) => theme.colors.whiteGlass};\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(12px);\r\n  border-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.18);\r\n\r\n  @media (max-width: 450px) {\r\n    width: 280px;\r\n  }\r\n`;\r\n\r\nexport const StyledSuccessSubmit = styled.p`\r\n  text-align: center;\r\n  background: ${({ theme }) => theme.colors.success};\r\n`;\r\n\r\nexport const StyledErrorSubmit = styled.p`\r\n  text-align: center;\r\n  background: ${({ theme }) => theme.colors.red};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  display: block;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  background: rgba(255, 255, 255, 0.2);\r\n  display: block;\r\n  width: 100%;\r\n  padding: 5px;\r\n  border-radius: 2px;\r\n  border: none;\r\n  outline: none;\r\n  margin-top: 2px;\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n`;\r\n\r\nexport const StyledError = styled.span`\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.red};\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Wrapper, StyledLabel, StyledInput, StyledError } from './InputField.styles';\r\n\r\nconst InputField = ({ input, label, type, step, min, max, meta: { touched, error } }) => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledLabel>\r\n        {label}\r\n        <StyledInput {...input} type={type} step={step} min={min} max={max} />\r\n        {touched && error && <StyledError>{error}</StyledError>}\r\n      </StyledLabel>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nInputField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  step: PropTypes.string,\r\n  min: PropTypes.string,\r\n  max: PropTypes.string,\r\n};\r\n\r\nexport default InputField;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSelect = styled.select`\r\n  background: rgba(255, 255, 255, 0.2);\r\n  width: 100%;\r\n  padding: 5px;\r\n  border-radius: 2px;\r\n  border: none;\r\n  outline: none;\r\n  margin-top: 2px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Wrapper, StyledLabel, StyledError } from '../InputField/InputField.styles';\r\nimport { StyledSelect } from './SelectField.styles';\r\n\r\nconst SelectField = ({ input, label, children, meta: { touched, error } }) => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledLabel>{label}</StyledLabel>\r\n      <StyledSelect {...input}>{children}</StyledSelect>\r\n      {touched && error && <StyledError>{error}</StyledError>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n};\r\n\r\nexport default SelectField;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: ${({ disabled, theme }) => (disabled ? theme.colors.whiteGlass : theme.colors.white)};\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.lightGrey};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledButton } from './Button.styles';\r\n\r\nconst Button = ({ props, type, disabled, label }) => {\r\n  return (\r\n    <StyledButton {...props} type={type} disabled={disabled}>\r\n      {label}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { required, validate, checkNameLength } from 'helpers.js';\r\nimport { StyledForm, StyledSuccessSubmit, StyledErrorSubmit } from './Form.styles';\r\nimport InputField from 'components/InputField/InputField';\r\nimport SelectField from 'components/SelectField/SelectField';\r\nimport Button from 'components/Button/Button';\r\n\r\nlet Form = ({ handleSubmit, valid, dishTypeValue, successInfo, errorInfo }) => {\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit} className=\"container\">\r\n      {successInfo && <StyledSuccessSubmit>Success</StyledSuccessSubmit>}\r\n      {errorInfo && <StyledErrorSubmit>Error</StyledErrorSubmit>}\r\n      <Field name=\"name\" component={InputField} type=\"text\" label=\"Dish name\" validate={[required, checkNameLength]} />\r\n      <Field\r\n        name=\"preparation_time\"\r\n        component={InputField}\r\n        type=\"time\"\r\n        label=\"Preparation time\"\r\n        step=\"1\"\r\n        validate={required}\r\n      />\r\n      <Field name=\"type\" component={SelectField} label=\"Dish type\" validate={required}>\r\n        <option value=\"\" />\r\n        <option value=\"pizza\">pizza</option>\r\n        <option value=\"soup\">soup</option>\r\n        <option value=\"sandwich\">sandwich</option>\r\n      </Field>\r\n      {dishTypeValue === 'pizza' && (\r\n        <>\r\n          <Field name=\"no_of_slices\" component={InputField} type=\"number\" label=\"Number of slices\" />\r\n          <Field name=\"diameter\" component={InputField} type=\"number\" step=\"0.5\" min=\"32\" max=\"50\" label=\"Diameter\" />\r\n        </>\r\n      )}\r\n      {dishTypeValue === 'soup' && (\r\n        <Field\r\n          name=\"spiciness_scale\"\r\n          component={InputField}\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          label=\"Spiciness scale from 1 to 10\"\r\n        />\r\n      )}\r\n      {dishTypeValue === 'sandwich' && (\r\n        <Field name=\"slices_of_bread\" component={InputField} type=\"number\" label=\"Slices of bread\" />\r\n      )}\r\n      <Button type=\"submit\" disabled={!valid} label=\"Submit\" />\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  valid: PropTypes.bool,\r\n  dishTypeValue: PropTypes.string,\r\n};\r\n\r\nForm = reduxForm({\r\n  form: 'formHexo',\r\n  validate,\r\n})(Form);\r\n\r\nconst selector = formValueSelector('formHexo');\r\nForm = connect((state) => {\r\n  const dishTypeValue = selector(state, 'type');\r\n  return {\r\n    dishTypeValue,\r\n  };\r\n})(Form);\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyle } from 'assets/styles/GlobalStyle';\r\nimport { theme } from 'assets/styles/theme';\r\nimport { convertValues } from 'helpers.js';\r\nimport { Wrapper } from './Root.styles';\r\nimport Form from 'components/Form/Form';\r\n\r\nconst OrderForm = () => {\r\n  const [successInfo, setSuccessInfo] = useState(false);\r\n  const [errorInfo, setErrorInfo] = useState(false);\r\n\r\n  const onSubmit = async (values) => {\r\n    const converted = convertValues(values);\r\n    await fetch('https://cors-anywhere.herokuapp.com/https://frosty-wood-6558.getsandbox.com:443/dishes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(converted),\r\n    })\r\n      .then((response) => console.log(response))\r\n      .catch((error) => setErrorInfo(true));\r\n    setSuccessInfo(true);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Wrapper>\r\n        <GlobalStyle />\r\n        <Form onSubmit={onSubmit} successInfo={successInfo} errorInfo={errorInfo} />\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport Root from 'views/Root';\r\n\r\nconst reducers = {\r\n  form: formReducer,\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middleware = [thunk];\r\nconst rootReducer = combineReducers(reducers);\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Root />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}